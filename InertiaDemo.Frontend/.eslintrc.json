{
    "root": true,
    "env": {
        "node": false,
        "browser": true,
        "jest": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "import",
        "@typescript-eslint",
        "react-hooks",
        "prettier",
        "testing-library"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "prettier"
    ],
    "rules": {
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports"
            }
        ],
        "import/no-anonymous-default-export": [
            "error",
            {
                "allowArray": false,
                "allowArrowFunction": false,
                "allowAnonymousClass": false,
                "allowAnonymousFunction": false,
                "allowCallExpression": true,
                "allowLiteral": false,
                "allowObject": false
            }
        ],
        "import/no-named-as-default": "off",
        "import/no-default-export": "error",
        "import/prefer-default-export": "off",
        "react/react-in-jsx-scope": "off",
        "react/hook-use-state": "error",
        "react-hooks/rules-of-hooks": "error",
        "prettier/prettier": "warn",
        "no-console": "warn"
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true
            }
        }
    }
}